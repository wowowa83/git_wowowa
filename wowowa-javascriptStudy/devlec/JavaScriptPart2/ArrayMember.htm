<!DOCTYPE html>
<html>
<head>
    <title>배열(Array)의 주요 멤버 설명</title>
    <script type="text/javascript">
        function printf(msg) { 
            document.write(msg + "<br />");
        }

        //[1] 빈 배열 생성
        var empty = [];
        printf(empty.length); // 배열의 길이

        //[2] 새로운 배열 생성
        var arr = ['a', 'b', 'c', 'd', 'e'];
        for (var i = 0; i < arr.length; i++) {
            printf(arr[i]); // 배열의 요소 값 출력
        }

        //[3] push(), pop() : 배열에 새로운 항목 추가
        arr.push('f'); // Stack에 push(), pop()
        printf(arr); // a~f
        printf(arr.pop()); // 가장 최근에 push()한 값을 출력
        printf(arr); // a~e

        //[4] reverse() : 함수의 내용을 거꾸로 변경
        printf(arr.reverse()); // 거꾸로 변경
        printf(arr.reverse()); // 다시 원래대로 변경

        //[5] slice() : 필요한 인덱스의 내용을 조회
        printf(arr.slice(1, 3)); // 1번째 인덱스부터 3번째 인덱스 전까지 : b,c
        printf(arr); // 

        //[6] splice() : 검색된 항목을 뽑아냄(Delete)
        printf(arr.splice(1, 3)); // b, c, d
        printf(arr); // a, e

        //[7] sort() : 정렬
        var sortArr = ['b', 'z', 'a', 'j'];
        printf(sortArr.sort()); // a, b, j, z
        printf(sortArr); // 변경된 상태
        var sortArr2 = [3, 1, 10, 30, 5, 4];
        printf(sortArr2.sort()); // 1, 3, 4, 5, ... => 1, 10, 3, 30, .. 첫번째 숫자를 기준...
        // 위 정렬 문제를 개선
        printf(sortArr2.sort(function (f, s) { return f - s; })); // 1, 3, 4, 5, 10, 30 정상 출력

    </script>
</head>
<body>

</body>
</html>
